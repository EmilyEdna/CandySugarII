<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
    xmlns:lib="http://lib.sugar.com"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes">
    <Style
        x:Key="DesignMenuItem"
        BasedOn="{x:Null}"
        TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="{DynamicResource SugarThemeWhite}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <ControlTemplate.Resources>
                        <Style TargetType="md:PackIcon">
                            <Setter Property="FrameworkElement.Width" Value="16" />
                            <Setter Property="FrameworkElement.Height" Value="16" />
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border
                            x:Name="templateRoot"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True" />
                        <Border
                            x:Name="BackgroundRoot"
                            Background="{TemplateBinding Foreground,
                                                         Converter={StaticResource BrushRoundConverter}}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="0"
                            SnapsToDevicePixels="True" />
                        <md:Ripple
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            Background="Transparent"
                            Feedback="{TemplateBinding Foreground,
                                                       Converter={StaticResource BrushRoundConverter}}"
                            Focusable="False">
                            <Grid Height="{TemplateBinding Height}" Background="Transparent">
                                <Grid
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="Center"
                                    Background="Transparent">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="IconGroup" />
                                        <ColumnDefinition Width="*" SharedSizeGroup="HeaderGroup" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid
                                        x:Name="IconWrapper"
                                        Width="30"
                                        Visibility="Visible">
                                        <ContentPresenter
                                            x:Name="Icon"
                                            Width="16"
                                            Height="16"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Content="{TemplateBinding Icon}"
                                            ContentSource="Icon"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                    <Grid
                                        x:Name="GlyphWrapper"
                                        Width="30"
                                        Visibility="Collapsed">
                                        <Viewbox
                                            x:Name="GlyphPanel"
                                            Width="16"
                                            Height="16"
                                            Margin="0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            FlowDirection="LeftToRight"
                                            Visibility="Collapsed">
                                            <Canvas Width="24" Height="24">
                                                <Path
                                                    x:Name="Glyph"
                                                    Data="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"
                                                    Fill="{TemplateBinding Foreground}"
                                                    FlowDirection="LeftToRight" />
                                            </Canvas>
                                        </Viewbox>
                                    </Grid>
                                    <Grid Grid.Column="1">
                                        <ContentPresenter
                                            x:Name="BoldHeaderPresenter"
                                            VerticalAlignment="Center"
                                            Content="{TemplateBinding Header}"
                                            ContentSource="Header"
                                            ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            RecognizesAccessKey="True"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            TextBlock.FontWeight="Bold"
                                            Visibility="Hidden" />
                                        <ContentPresenter
                                            x:Name="HeaderPresenter"
                                            VerticalAlignment="Center"
                                            Content="{TemplateBinding Header}"
                                            ContentSource="Header"
                                            ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            RecognizesAccessKey="True"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                    <Grid
                                        x:Name="InputGestureTextWrapper"
                                        Grid.Column="2"
                                        Visibility="Collapsed">
                                        <TextBlock
                                            Margin="16,0,0,0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Foreground="{TemplateBinding Foreground}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Text="{TemplateBinding InputGestureText}"
                                            Visibility="{TemplateBinding InputGestureText,
                                                                         Converter={StaticResource StringIsEmptyVisibilityConverter}}" />
                                    </Grid>
                                    <Grid
                                        x:Name="SubBlock"
                                        Grid.Column="2"
                                        Margin="16,0,0,0"
                                        Visibility="Collapsed">
                                        <Path
                                            Width="5"
                                            Height="10"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            Data="M0,16 L8,8 L0,0 Z"
                                            Fill="{TemplateBinding Foreground}"
                                            SnapsToDevicePixels="False"
                                            Stretch="Uniform" />
                                    </Grid>
                                </Grid>
                            </Grid>
                        </md:Ripple>
                        <Popup
                            x:Name="PART_Popup"
                            AllowsTransparency="True"
                            CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(md:ShadowAssist.CacheMode)}"
                            Focusable="False"
                            IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Border
                                x:Name="SubMenuBorder"
                                Background="{DynamicResource SugarThemeDefault}"
                                CornerRadius="0"
                                Effect="{DynamicResource MaterialDesignShadowDepth1}">
                                <Border Background="{TemplateBinding Background}" CornerRadius="0">
                                    <Border Background="Transparent">
                                        <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas
                                                    Width="0"
                                                    Height="0"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Top">
                                                    <Rectangle
                                                        x:Name="OpaqueRect"
                                                        Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
                                                        Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                                        Fill="Transparent" />
                                                </Canvas>
                                                <ItemsPresenter
                                                    x:Name="ItemsPresenter"
                                                    Grid.IsSharedSizeScope="True"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Border>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--#region Roles Triggers-->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter TargetName="SubBlock" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_Popup" Property="Placement" Value="Right" />
                            <Setter TargetName="PART_Popup" Property="VerticalOffset" Value="-16" />
                            <Setter Property="Height" Value="32" />
                            <Setter TargetName="BoldHeaderPresenter" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="Height" Value="32" />
                            <Setter TargetName="InputGestureTextWrapper" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BoldHeaderPresenter" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Grid.IsSharedSizeScope" Value="True" />
                            <Setter Property="Padding" Value="16,0" />
                            <Setter Property="Height" Value="{Binding Path=(md:MenuAssist.TopLevelMenuItemHeight), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=MenuBase}}" />
                            <Setter TargetName="templateRoot" Property="CornerRadius" Value="2" />
                            <Setter TargetName="BackgroundRoot" Property="CornerRadius" Value="2" />
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Padding" Value="16,0" />
                            <Setter Property="Height" Value="48" />
                            <Setter TargetName="templateRoot" Property="CornerRadius" Value="2" />
                            <Setter TargetName="BackgroundRoot" Property="CornerRadius" Value="2" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="TopLevelHeader" />
                                <Condition Property="IsSubmenuOpen" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="HeaderPresenter" Property="TextBlock.FontWeight" Value="Bold" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <!--#endregion-->

                        <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
                            <Setter TargetName="SubMenuBorder" Property="Margin" Value="5" />
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                            <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="IconWrapper" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsCheckable" Value="True">
                            <Setter TargetName="GlyphWrapper" Property="Visibility" Value="Visible" />
                            <Setter TargetName="IconWrapper" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="BackgroundRoot" Property="Opacity" Value="0.13" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".56" />
                        </Trigger>
                        <Trigger SourceName="SubMenuScrollViewer" Property="CanContentScroll" Value="False">
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="CandyMenuItem"
        BasedOn="{StaticResource DesignMenuItem}"
        TargetType="{x:Type MenuItem}">
        <Setter Property="FontFamily" Value="{DynamicResource FontStyle}" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style x:Key="CandyWindow" TargetType="lib:CandyWindow">
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="WindowState" Value="Normal" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="FontFamily" Value="{DynamicResource FontStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="lib:CandyWindow">
                    <Grid
                        x:Name="GridContent"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        MaxHeight="{TemplateBinding MaxHeight}">
                        <Image
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Source="{DynamicResource SugarThemeBG}"
                            Stretch="UniformToFill">
                            <Image.Effect>
                                <BlurEffect KernelType="Gaussian" Radius="20" />
                            </Image.Effect>
                        </Image>
                        <Canvas>
                            <ContentPresenter />
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CandyLoginWindow" TargetType="lib:CandyWindow">
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="WindowState" Value="Normal" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="FontFamily" Value="{DynamicResource FontStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="lib:CandyWindow">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Grid.Background>
                            <SolidColorBrush Opacity=".62" Color="White" />
                        </Grid.Background>
                        <Grid.Clip>
                            <RectangleGeometry
                                RadiusX="15"
                                RadiusY="15"
                                Rect="0,0,400,300" />
                        </Grid.Clip>
                        <Grid>
                            <ContentPresenter />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CandyOptionWindow" TargetType="lib:CandyWindow">
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="WindowState" Value="Normal" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="Width" Value="400" />
        <Setter Property="Height" Value="600" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="FontFamily" Value="{DynamicResource FontStyle}" />
    </Style>

    <Style BasedOn="{x:Null}" TargetType="lib:CandyTextBox">
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Height" Value="30" />
        <Setter Property="MaxHeight" Value="30" />
        <Setter Property="VerticalContentAlignment" Value="Bottom" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="lib:CandyTextBox">
                    <Grid>
                        <Border Background="Transparent" BorderThickness="0,0,0,1">
                            <Border.BorderBrush>
                                <SolidColorBrush Opacity=".62" Color="Black" />
                            </Border.BorderBrush>
                        </Border>
                        <Grid VerticalAlignment="Bottom">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="22" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter
                                x:Name="Icon"
                                Margin="0,0,0,1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Icon}"
                                ContentSource="Icon"
                                SnapsToDevicePixels="True" />
                            <TextBlock
                                x:Name="PlaceHolder"
                                Grid.Column="1"
                                Margin="5,0,0,0"
                                VerticalAlignment="Bottom"
                                Text="{TemplateBinding PlaceHolder}">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Opacity="0.3" Color="Black" />
                                </TextBlock.Foreground>
                            </TextBlock>
                            <TextBlock
                                x:Name="TextContent"
                                Grid.Column="1"
                                Margin="5,0,0,0"
                                VerticalAlignment="Bottom"
                                Text="{TemplateBinding Text}"
                                Visibility="Collapsed" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="TextContent" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PlaceHolder" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}, Converter={StaticResource ToBool}}" Value="False">
                            <Setter TargetName="PlaceHolder" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="TextContent" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SilderMenu" TargetType="lib:CandyButton">
        <Setter Property="Width" Value="200" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="0,1" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="lib:CandyButton">
                    <Grid
                        x:Name="GridContent"
                        Background="{TemplateBinding Background}"
                        Visibility="{TemplateBinding Visibility}">
                        <Border
                            x:Name="mark"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="44" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid
                                x:Name="IconWrapper"
                                Width="30"
                                Visibility="Visible">
                                <ContentPresenter
                                    x:Name="Icon"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Icon}"
                                    ContentSource="Icon"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <StackPanel
                                Grid.Column="1"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center">
                                <TextBlock
                                    FontSize="12"
                                    Foreground="{DynamicResource SugarThemeRed}"
                                    Text="{TemplateBinding Content}" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="mark" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Opacity=".6" Color="LightGray" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>